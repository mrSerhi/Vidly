{"version":3,"sources":["components/layout/spinner/Spin-1s-30px.svg","services/fakeGenreService.js","services/fakeMovieService.js","utils/forPagination.js","components/layout/spinner/spinner.js","components/tableMovies/tableHeader.jsx","components/layout/like/like.js","components/tableMovies/tableBody.jsx","components/tableMovies/table.jsx","components/tableMovies/tableMovies.js","components/titleMovies/titleMovies.js","components/layout/pagination/pagination.js","components/layout/sidebar.js","components/search/search.js","components/movies/movies.js","components/layout/backWay/backLink.js","components/layout/pages/customers/customers.js","components/layout/pages/rentals/rentals.js","components/form/formGroup.jsx","components/form/formSelectMenu.jsx","components/form/form.js","components/layout/pages/movie/updateMovie.js","components/layout/pages/notFound/notFound.js","components/layout/navBar/navBar.js","components/layout/pages/login/loginForm.js","components/layout/pages/register/register.js","components/addMovie/addMovie.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","genres","_id","name","getGenres","filter","g","movies","title","genre","numberInStock","dailyRentalRate","publishDate","getMovies","saveMovie","movie","movieInDb","find","m","genresAPI","stock","rate","Date","now","toString","push","createPagination","items","currPage","itemsPerPage","initStart","Object","toConsumableArray","slice","Spinner","react_default","a","createElement","className","src","spinnerSVG","alt","TableHeader","_ref","orderedItems","columnsPath","onSorting","map","item","key","path","onClick","ordered","objectSpread","order","sortingItems","label","RenderIcon","Like","liked","onLiked","likeHeart","TableBody","data","onDeleted","RenderColumns","react_router_dom","to","concat","like","Table","tableHeader","tableBody","TableMovies","length","table","TitleMovies","Pagination","itemsLength","currentPage","onChangePagination","pagination","numOfPages","Math","ceil","pages","i","page","active","uuid","e","href","paginationItems","Sidebar","selectedItem","onGenreDisplay","renderGenres","id","itemClasses","hightlight","Search","state","value","_this","props","initQuery","handleChange","setState","target","onSearch","onChange","this","type","placeholder","Component","Movies","loaded","contentPerPage","selectedGenre","searchQuery","handleDeleteClick","splice","indexOf","deleteMovie","handleLikedToggle","shallCopy","index","findIndex","forEach","handlePaginationClick","preventDefault","handleGenresSelect","handleSortingData","handleSearching","filteringMovies","_this$state","findedMovies","toLowerCase","includes","renderContent","_this$state2","_this$state2$ordered","filteredContent","sortingMoviesByOrder","_","orderBy","Fragment","titleMovies","search","sidebar","tableMovies","pagination_pagination","spinner","_this2","localStorage","setItem","JSON","stringify","setTimeout","parse","getItem","BackLink","Customers","backLink","Rentals","FormGroup","error","required","errorMessage","inputValidClases","isRequired","htmlFor","FormSelectMenu","options","rest","objectWithoutProperties","assign","Form","errors","validationOnSubmit","Joi","validate","schema","abortEarly","details","message","handleSubmitForm","inValid","workWithData","history","validationOnChange","inputVal","defineProperty","_ref$target","inValidMessage","renderInput","arguments","undefined","formGroup","renderCustomSelectMenu","formSelectMenu","renderSubmit","allowSubmiting","onDesablesChange","disabled","UpdateMovie","string","number","min","max","_this$props","match","currMovieID","params","replace","onSubmit","NotFound","NavBar","data-toggle","data-target","LoginForm","email","alphanum","minDomainAtoms","alert","Register","password","AddMovie","App","navBar","react_router","component","exact","from","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e1b0335c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Spin-1s-30px.c4774c19.svg\";","export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\"\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n/*\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.title = movie.title;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n*/\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.title = movie.title;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genre._id);\n  movieInDb.numberInStock = movie.stock;\n  movieInDb.dailyRentalRate = movie.rate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now().toString();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","export const createPagination = (items, currPage, itemsPerPage) => {\n  const initStart = (currPage - 1) * itemsPerPage;\n  const cutItems = [...items];\n  const sliceItems = cutItems.slice(initStart);\n  return sliceItems.slice(0, itemsPerPage);\n};\n","import React from \"react\";\nimport spinnerSVG from \"./Spin-1s-30px.svg\";\n\nconst Spinner = () => {\n  return (\n    <div className=\"col-dm-6 mx-auto\">\n      <img src={spinnerSVG} alt=\"loading\" />\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// should get:\n// onSorting - func\n// columns path - arr of obj\n// ordered items - obj\nconst TableHeader = ({ orderedItems, columnsPath, onSorting }) => {\n  const sortingItems = path => {\n    // 1. clone ordered state obj from props\n    const ordered = { ...orderedItems };\n    // 2. Check if path equal ordered.path for reverse sorting and change on 'desc' or set previous\n    if (ordered.path === path) {\n      ordered.order = ordered.order === \"asc\" ? \"desc\" : \"asc\";\n    } else {\n      ordered.path = path;\n      ordered.order = \"asc\";\n    }\n    onSorting(ordered); // return ordered object\n  };\n\n  const RenderColumns = () => {\n    return columnsPath.map(item => {\n      const RenderIcon = () => {\n        const { path, order } = orderedItems;\n\n        if (item.path === path && order === \"desc\") {\n          return <i className=\"fas fa-sort-up\" />;\n        } else if (item.path === path && order === \"asc\") {\n          return <i className=\"fas fa-sort-down\" />;\n        }\n        return null;\n      };\n      return (\n        <th key={item.path || item.key}>\n          <button\n            onClick={() => sortingItems(item.path)}\n            className=\"btn btn-link text-light px-0\"\n          >\n            {item.label} {RenderIcon()}\n          </button>\n        </th>\n      );\n    });\n  };\n\n  return (\n    <thead className=\"thead thead-dark \">\n      <tr>{RenderColumns()}</tr>\n    </thead>\n  );\n};\n\nTableHeader.propTypes = {\n  columnsPath: PropTypes.array.isRequired,\n  orderedItems: PropTypes.object.isRequired,\n  onSorting: PropTypes.func.isRequired\n};\n\nexport default TableHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Like = ({ liked, onLiked }) => {\n  const likeHeart = liked ? \"fas fa-heart\" : \"far fa-heart\";\n  return (\n    <button onClick={onLiked} className=\"btn btn-link text-dark\">\n      <i className={likeHeart} />\n    </button>\n  );\n};\n\nLike.propTypes = {\n  liked: PropTypes.bool.isRequired,\n  onLiked: PropTypes.func.isRequired\n};\n\nexport default Like;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n// components\nimport Like from \"../layout/like/like\";\n\nconst TableBody = ({ data, onDeleted, onLiked }) => {\n  const RenderColumns = data.map(movie => {\n    const {\n      _id,\n      title,\n      genre: { name },\n      numberInStock: stock,\n      dailyRentalRate: rate,\n      liked\n    } = movie;\n\n    return (\n      <tr key={_id}>\n        <td>\n          <Link to={`/movie/${_id}`} className=\"btn btn-link\">\n            {title}\n          </Link>\n        </td>\n        <td>{name}</td>\n        <td>{stock}</td>\n        <td>{rate}</td>\n        <td>\n          <Like onLiked={() => onLiked(_id)} liked={liked} />\n        </td>\n        <td>\n          <button\n            onClick={() => onDeleted(_id)}\n            className=\"btn btn-danger btn-sm\"\n          >\n            <i className=\"fas fa-trash\" />\n          </button>\n        </td>\n      </tr>\n    );\n  });\n\n  return <tbody className=\"tbody\">{RenderColumns}</tbody>;\n};\n\nTableBody.propTypes = {\n  data: PropTypes.array.isRequired,\n  onDeleted: PropTypes.func.isRequired,\n  onLiked: PropTypes.func.isRequired\n};\n\nexport default TableBody;\n","import React from \"react\";\n\n// components\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nconst Table = ({ data, orderedItems, path, onSorting, onDeleted, onLiked }) => {\n  return (\n    <table className=\"table table-responsive-sm table-striped\">\n      <TableHeader\n        orderedItems={orderedItems}\n        columnsPath={path}\n        onSorting={onSorting}\n      />\n      <TableBody data={data} onDeleted={onDeleted} onLiked={onLiked} />\n    </table>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\n\n// components\nimport Table from \"./table\";\n\nconst TableMovies = ({ data, orderedItems, onDeleted, onLiked, onSorting }) => {\n  const _path = [\n    { path: \"title\", label: \"Title\" },\n    { path: \"genre.name\", label: \"Genre\" },\n    { path: \"numberInStock\", label: \"Stock\" },\n    { path: \"dailyRentalRate\", label: \"Rate\" },\n    { key: \"like\" },\n    { key: \"delete\" }\n  ];\n\n  return (\n    <div className=\"col-md-10 mx-auto\">\n      {data.length !== 0 && (\n        <Table\n          data={data}\n          orderedItems={orderedItems}\n          path={_path}\n          onLiked={onLiked}\n          onDeleted={onDeleted}\n          onSorting={onSorting}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default TableMovies;\n","import React from \"react\";\n\nconst TitleMovies = ({ length }) => {\n  const title =\n    length > 0 ? (\n      <h3 className=\"title-movies text-center\">\n        In the Database we are haves{\" \"}\n        <span className=\"badge badge-success\">{length}</span> movies\n      </h3>\n    ) : (\n      <h3 className=\"text-warning\">\n        Don't exist the movies in our database...\n      </h3>\n    );\n  return <div className=\"col-md-12 mx-auto\">{title}</div>;\n};\n\nexport default TitleMovies;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport uuid from \"uuid\";\n\nconst Pagination = ({\n  itemsLength,\n  itemsPerPage,\n  currentPage,\n  onChangePagination\n}) => {\n  const createPagination = (itemsLength, itemsPerPage) => {\n    const numOfPages = Math.ceil(itemsLength / itemsPerPage);\n    if (numOfPages === 1) return null; // hide pagination if result is a one page\n    const pages = [];\n    for (let i = 1; i <= numOfPages; i++) {\n      pages.push(i);\n    }\n    return pages;\n  };\n\n  const paginationItems = () => {\n    const pagination = createPagination(itemsLength, itemsPerPage);\n\n    if (pagination !== null) {\n      return pagination.map(page => {\n        const active = currentPage === page ? \"page-item active\" : \"page-item\";\n        return (\n          <li key={uuid()} className={active}>\n            <a\n              onClick={e => onChangePagination(e, page)}\n              className=\"page-link\"\n              href=\"#!\"\n            >\n              {page}\n            </a>\n          </li>\n        );\n      });\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"col-md-12 d-flex justify-content-center\">\n      <ul className=\"pagination\">{paginationItems()}</ul>\n    </div>\n  );\n};\n\nPagination.propTypes = {\n  itemsLength: PropTypes.number.isRequired,\n  itemsPerPage: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onChangePagination: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Sidebar = ({ genres, selectedItem, onGenreDisplay }) => {\n  const renderGenres = genres.map(g => {\n    const { _id: id, name: genre } = g;\n    const itemClasses = \"list-group-item list-group-item-action \";\n    const hightlight =\n      selectedItem === genre ? itemClasses + \"active\" : itemClasses;\n    return (\n      <a\n        onClick={e => onGenreDisplay(e, genre)}\n        href=\"#!\"\n        key={id}\n        className={hightlight}\n      >\n        {genre}\n      </a>\n    );\n  });\n  // d-flex flex-row justify-content-between align-items-center mb-1 mx-auto\n  return (\n    <div className=\"col-md-10 sidebar\">\n      <ul className=\"list-group list-group-horizontal\">{renderGenres}</ul>\n\n      <Link to=\"/movie/add\" className=\"btn btn-outline-primary\">\n        Add Movie\n      </Link>\n    </div>\n  );\n};\n\nSidebar.propTypes = {\n  genres: PropTypes.array.isRequired,\n  onGenreDisplay: PropTypes.func.isRequired,\n  selectedItem: PropTypes.string\n};\n\nexport default Sidebar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Search extends Component {\n  state = { value: this.props.initQuery };\n\n  handleChange = e => {\n    this.setState({ value: e.target.value });\n\n    this.props.onSearch(e.target.value);\n  };\n  render() {\n    return (\n      <div className=\"col-md-6 mx-auto \">\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text text-light bg-dark\">Search</span>\n          </div>\n\n          <input\n            onChange={this.handleChange}\n            value={this.props.initQuery}\n            name=\"search\"\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Type a movie name...\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = {\n  initQuery: PropTypes.string\n};\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport uuid from \"uuid\";\nimport _ from \"lodash\";\n// fake API\nimport { getMovies, deleteMovie } from \"../../services/fakeMovieService\";\nimport { getGenres } from \"../../services/fakeGenreService\";\n// utils for create pagination\nimport { createPagination } from \"../../utils/forPagination\";\n\n// components\nimport Spinner from \"../layout/spinner/spinner\";\nimport TableMovies from \"../tableMovies/tableMovies\";\nimport TitleMovies from \"../titleMovies/titleMovies\";\nimport Pagination from \"../layout/pagination/pagination\";\nimport Sidebar from \"../layout/sidebar\";\nimport Search from \"../search/search\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    loaded: false,\n    contentPerPage: 4,\n    currentPage: 1,\n    genres: [],\n    selectedGenre: \"AllGenres\",\n    ordered: { path: \"title\", order: \"asc\" },\n    searchQuery: \"\"\n  };\n\n  componentDidMount() {\n    localStorage.setItem(\"movies\", JSON.stringify(getMovies()));\n    setTimeout(() => {\n      this.setState({\n        movies: JSON.parse(localStorage.getItem(\"movies\")),\n        loaded: true,\n        genres: [{ _id: uuid, name: \"AllGenres\" }, ...getGenres()]\n      });\n    }, 1000);\n  }\n\n  componentDidUpdate() {\n    const { movies } = this.state;\n    localStorage.setItem(\"movies\", JSON.stringify(movies));\n  }\n\n  handleDeleteClick = id => {\n    const movies = [...this.state.movies];\n    const filter = movies.filter(m => m._id !== id);\n    this.setState({ movies: filter });\n    deleteMovie(id);\n  };\n\n  handleLikedToggle = id => {\n    this.setState(state => {\n      const shallCopy = [...state.movies];\n      const index = shallCopy.findIndex(m => m._id === id);\n      shallCopy[index] = { ...shallCopy[index] };\n      shallCopy[index].liked = !shallCopy[index].liked;\n\n      return { movies: shallCopy };\n    });\n    const dataAPI = getMovies();\n    dataAPI.forEach(item => {\n      if (item._id === id) item.liked = !item.liked;\n    });\n  };\n\n  handlePaginationClick = (e, page) => {\n    e.preventDefault();\n    this.setState({ currentPage: page });\n  };\n\n  handleGenresSelect = (e, genre) => {\n    e.preventDefault();\n    this.setState({ selectedGenre: genre, currentPage: 1, searchQuery: \"\" });\n  };\n\n  handleSortingData = ordered => {\n    this.setState({ ordered });\n  };\n\n  handleSearching = searchQuery => this.setState({ searchQuery });\n\n  filteringMovies = () => {\n    const { selectedGenre: genre, movies, searchQuery } = this.state;\n\n    // find movies\n    const findedMovies = movies.filter(m =>\n      m.title.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n\n    if (genre !== \"AllGenres\") {\n      return findedMovies.filter(m => m.genre.name === genre);\n    }\n    // return movies;\n    return findedMovies;\n  };\n\n  renderContent = () => {\n    const {\n      loaded,\n      contentPerPage,\n      currentPage,\n      genres,\n      selectedGenre,\n      ordered: { path, order }\n    } = this.state;\n\n    // filtering by genre\n    const filteredContent = this.filteringMovies();\n    // sorting by order\n    const sortingMoviesByOrder = _.orderBy(filteredContent, [path], [order]);\n    // pagination\n    const movies = createPagination(\n      sortingMoviesByOrder,\n      currentPage,\n      contentPerPage\n    );\n\n    if (loaded) {\n      return (\n        <React.Fragment>\n          <TitleMovies length={filteredContent.length} />\n\n          <Search\n            onSearch={this.handleSearching}\n            initQuery={this.state.searchQuery}\n          />\n\n          <Sidebar\n            genres={genres}\n            selectedItem={selectedGenre}\n            onGenreDisplay={this.handleGenresSelect}\n          />\n\n          <TableMovies\n            data={movies}\n            orderedItems={this.state.ordered}\n            onDeleted={this.handleDeleteClick}\n            onLiked={this.handleLikedToggle}\n            onSorting={this.handleSortingData}\n          />\n\n          <Pagination\n            itemsLength={filteredContent.length}\n            itemsPerPage={contentPerPage}\n            currentPage={currentPage}\n            onChangePagination={this.handlePaginationClick}\n          />\n        </React.Fragment>\n      );\n    }\n    return <Spinner />;\n  };\n\n  render() {\n    return <div className=\"row\">{this.renderContent()}</div>;\n  }\n}\n\nexport default Movies;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst BackLink = () => {\n  return (\n    <div className=\"col-md-6\">\n      <Link to=\"/movies\">\n        <i className=\"fas fa-arrow-left\" /> Back to movies\n      </Link>\n    </div>\n  );\n};\n\nexport default BackLink;\n","import React from \"react\";\nimport BackLink from \"../../backWay/backLink\";\n\nconst Customers = () => {\n  return (\n    <div className=\"row\">\n      <BackLink />\n      <div className=\"col-md-6\">\n        <h1>Customers component</h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Customers;\n","import React from \"react\";\nimport BackLink from \"../../backWay/backLink\";\n\nconst Rentals = () => {\n  return (\n    <div className=\"row\">\n      <BackLink />\n      <div className=\"col-md-6\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h1 className=\"text-primary\">Rentals Component</h1>\n            <p className=\"lead text-muted\">\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Ab,\n              dolor.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Rentals;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FormGroup = ({\n  label,\n  name,\n  value,\n  onChange,\n  error,\n  placeholder,\n  required,\n  type\n}) => {\n  const errorMessage = <div className=\"invalid-feedback\">{error}</div>;\n  const inputValidClases = error ? \"form-control is-invalid\" : \"form-control\";\n  const isRequired = required ? <span className=\"text-danger\">*</span> : null;\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>\n        {label} {isRequired}\n      </label>\n      <input\n        className={inputValidClases}\n        type={type}\n        value={value}\n        onChange={onChange}\n        name={name}\n        id={name}\n        placeholder={placeholder}\n      />\n      {error && errorMessage}\n    </div>\n  );\n};\n\nFormGroup.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n  required: PropTypes.bool\n};\n\nexport default FormGroup;\n","import React from \"react\";\n\nconst FormSelectMenu = ({ name, options, label, ...rest }) => {\n  const renderGenres = options.map(item => {\n    const { _id, name } = item;\n    return (\n      <option key={_id} value={_id}>\n        {name}\n      </option>\n    );\n  });\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <select name={name} id={name} {...rest} className=\"custom-select\">\n        <option value=\"\" />\n        {renderGenres}\n      </select>\n    </div>\n  );\n};\n\nexport default FormSelectMenu;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\n\n// components\nimport FormGroup from \"./formGroup\";\nimport FormSelectMenu from \"./formSelectMenu\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {}\n  };\n\n  validationOnSubmit = () => {\n    // abortEarly === false - is prevent aborting on first finded error and stoped\n    const options = { abortEarly: false };\n    // get error obj from returns Joi validation responce\n    // get **data state object to validate\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n\n    if (!error) return null;\n\n    let errors = {};\n    // should looping error.details array and set error message on current field name\n    // path = current field name (array) -> message = error message (string)\n    error.details.forEach(item => (errors[item.path[0]] = item.message));\n\n    return errors;\n  };\n\n  handleSubmitForm = e => {\n    e.preventDefault();\n\n    // some validation\n    const inValid = this.validationOnSubmit();\n    // in the component value must not be a null or undefined!!!\n    // For this case we should to replace returns *null* on empty object\n    this.setState({ errors: inValid || {} });\n    if (inValid) return;\n\n    // do some stuff with server and/or API\n    this.workWithData();\n\n    // clear fields\n    const data = { ...this.state.data };\n    for (const key in data) data[key] = \"\";\n    this.setState({ data });\n\n    this.props.history.push(\"/movies\");\n  };\n\n  validationOnChange = (name, value) => {\n    // create obj for each input use name property\n    const inputVal = { [name]: value };\n    // create the local schema object with main rules valid for each name input\n    const schema = {\n      [name]: this.schema[name]\n    };\n    // not uses options object because we needs aborting on first finded error\n    const { error } = Joi.validate(inputVal, schema);\n\n    return error ? error.details[0].message : null;\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    // copy of errors state\n    const errors = { ...this.state.errors };\n    // valid values on change and save error message\n    const inValidMessage = this.validationOnChange(name, value);\n    // checking on error message\n    if (inValidMessage) {\n      errors[name] = inValidMessage;\n    } else {\n      delete errors[name];\n    }\n\n    const data = { ...this.state.data };\n    data[name] = value;\n    this.setState({ data, errors });\n  };\n\n  // helpfull render fn-s\n  renderInput = (name, label, required = false, type = \"text\") => {\n    const { data, errors } = this.state;\n\n    return (\n      <FormGroup\n        label={label}\n        name={name}\n        value={data[name]}\n        onChange={this.handleChange}\n        error={errors[name]} // should not be a null or undefined\n        placeholder={`Enter your ${label}`}\n        required={required}\n        type={type}\n      />\n    );\n  };\n\n  renderCustomSelectMenu = (name, options = [], label = \"\") => {\n    const { data } = this.state;\n    return (\n      <FormSelectMenu\n        onChange={this.handleChange}\n        name={name}\n        options={options}\n        label={label}\n        value={data[name]}\n        // errors={errors[name]}\n      />\n    );\n  };\n\n  renderSubmit = (label, className = \"btn-info\") => {\n    const allowSubmiting = this.validationOnSubmit(); // return null or object with errors\n    const onDesablesChange = allowSubmiting\n      ? \"btn btn-secondary\"\n      : \"btn \" + className;\n    return (\n      <input\n        className={onDesablesChange}\n        type=\"submit\"\n        value={label}\n        disabled={allowSubmiting}\n      />\n    );\n  };\n}\n\nexport default Form;\n","import React from \"react\";\nimport BackLink from \"../../backWay/backLink\";\n\n// for validate\nimport Joi from \"joi-browser\";\n\n// fake API\nimport { getMovie, saveMovie } from \"../../../../services/fakeMovieService\";\nimport { getGenres } from \"../../../../services/fakeGenreService\";\n\n// components\nimport Form from \"../../../form/form\";\n\nclass UpdateMovie extends Form {\n  state = {\n    data: {\n      title: \"\",\n      genre: \"\",\n      stock: \"\",\n      rate: \"\"\n    },\n    genres: [],\n    errors: {}\n  };\n\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string()\n      .required()\n      .label(\"Title\"),\n    genre: Joi.string().label(\"Genre\"),\n    stock: Joi.number()\n      .min(0)\n      .max(100)\n      .label(\"Number in stock\"),\n    rate: Joi.number()\n      .min(0)\n      .max(10)\n      .label(\"Rate\")\n  };\n  // emulate UPDATE request to the server\n  // workWithData = () => {\n  //   const { selectMovieID, data } = this.state;\n  //   const { genre, ...movie } = data;\n  //   movie._id = selectMovieID;\n  //   movie.genre = getGenres().filter(g => g._id === genre)[0]; // return first object from array\n  //   saveMovie(movie);\n  // };\n\n  workWithData = () => {\n    const { data: movie, genres } = this.state;\n    movie.genre = genres.filter(g => g._id === movie.genre)[0];\n    saveMovie(movie);\n  };\n\n  componentDidMount() {\n    const { match, history } = this.props;\n    const currMovieID = match.params.id;\n    // get current movie\n    const movie = getMovie(currMovieID);\n    if (!movie) return history.replace(\"/not_found\");\n\n    const { _id, title, genre, numberInStock, dailyRentalRate } = movie;\n    const data = { ...this.state.data };\n\n    data._id = _id;\n    data.title = title;\n    data.genre = genre._id;\n    data.stock = numberInStock;\n    data.rate = dailyRentalRate;\n\n    this.setState({\n      data,\n      // selectMovieID: _id,\n      genres: getGenres()\n    });\n  }\n\n  render() {\n    const { genres } = this.state;\n\n    return (\n      <React.Fragment>\n        <BackLink />\n        <div className=\"col-md-6 mx-auto\">\n          <div className=\"card bg-dark text-light border-danger\">\n            <h5 className=\"card-header bg-danger\">Update Movie</h5>\n            <div className=\"card-body\">\n              <form onSubmit={this.handleSubmitForm} className=\"form\">\n                {this.renderInput(\"title\", \"Title\", true)}\n                {this.renderCustomSelectMenu(\"genre\", genres, \"Genre\")}\n                {this.renderInput(\"stock\", \"Number in stock\", true)}\n                {this.renderInput(\"rate\", \"Rate\", true)}\n                {this.renderSubmit(\"Update...\", \"btn-warning\")}\n              </form>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default UpdateMovie;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <h1 className=\"display-1 text-info\">NotFound component</h1>;\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nconst NavBar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-5\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          Vidly\n        </Link>\n\n        <button\n          className=\"navbar-toggler\"\n          data-toggle=\"collapse\"\n          data-target=\"#navBarVidly\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navBarVidly\">\n          <ul className=\"navbar-nav mr-auto\">\n            <NavLink to=\"/movies\" className=\"nav-item nav-link\">\n              Movies\n            </NavLink>\n\n            <NavLink to=\"/customers\" className=\"nav-item nav-link\">\n              Customers\n            </NavLink>\n\n            <NavLink to=\"/rentals\" className=\"nav-item nav-link\">\n              Rentals\n            </NavLink>\n          </ul>\n\n          <ul className=\"navbar-nav ml-auto\">\n            <NavLink to=\"/login\" className=\"nav-item nav-link\">\n              <i className=\"fas fa-lock\" /> Login\n            </NavLink>\n\n            <NavLink to=\"/register\" className=\"nav-item nav-link\">\n              <i className=\"fas fa-user\" /> Register\n            </NavLink>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\n\n// components\nimport Form from \"../../../form/form\"; // inherited class\n\nclass LoginForm extends Form {\n  state = {\n    data: { name: \"\", email: \"\" },\n    errors: {}\n  };\n\n  // obj with main rules for Joi validation\n  schema = {\n    name: Joi.string()\n      .alphanum()\n      .min(3)\n      .max(30)\n      .required()\n      .label(\"Name\"),\n    email: Joi.string()\n      .email({ minDomainAtoms: 2 })\n      .label(\"Email\")\n  };\n\n  // call server or/and API when submiting form\n  workWithData = () => alert(\"Do some with the server\");\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"col-sm-6 mx-auto\">\n          <div className=\"card\">\n            <h4 className=\"card-header bg-info text-white\">\n              <i className=\"fas fa-unlock\" /> Login\n            </h4>\n            <div className=\"card-body\">\n              <form onSubmit={this.handleSubmitForm} className=\"form\">\n                {this.renderInput(\"name\", \"Username\", true)}\n                {this.renderInput(\"email\", \"Email\", true)}\n                {this.renderSubmit(\"Login\")}\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\n// components\nimport Form from \"../../../form/form\";\n\nclass Register extends Form {\n  state = {\n    data: { name: \"\", password: \"\", email: \"\" },\n    errors: {}\n  };\n\n  schema = {\n    name: Joi.string()\n      .alphanum()\n      .min(3)\n      .max(10)\n      .label(\"userName\"),\n    password: Joi.string()\n      .min(5)\n      .max(20)\n      .label(\"Password\"),\n    email: Joi.string()\n      .email({ minDomainAtoms: 2 })\n      .label(\"Email\")\n  };\n\n  // call server or/and API when submiting form\n  workWithData = () => alert(\"Do some with the server\");\n\n  render() {\n    return (\n      <div className=\"col-sm-6 mx-auto\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-success text-light\">Register</h4>\n          <div className=\"card-body\">\n            <form onSubmit={this.handleSubmitForm} className=\"form\">\n              {this.renderInput(\"name\", \"Username\", true)}\n              {this.renderInput(\"email\", \"Email\", true)}\n              {this.renderInput(\"password\", \"Password\", true, \"password\")}\n              {this.renderSubmit(\"Register\", \"btn-success\")}\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import React from \"react\";\n// fake API\nimport { saveMovie } from \"../../services/fakeMovieService\";\nimport { getGenres } from \"../../services/fakeGenreService\";\n\n// for validation rules\nimport Joi from \"joi-browser\";\n\n// components\nimport Form from \"../form/form\";\nimport BackLink from \"../layout/backWay/backLink\";\n\nclass AddMovie extends Form {\n  state = {\n    data: {\n      title: \"\",\n      genre: \"\",\n      stock: \"\",\n      rate: \"\"\n    },\n    genres: [],\n    errors: {}\n  };\n\n  schema = {\n    title: Joi.string()\n      .required()\n      .label(\"Title\"),\n    genre: Joi.string().label(\"Genre\"),\n    stock: Joi.number()\n      .min(0)\n      .max(100)\n      .label(\"Number in stock\"),\n    rate: Joi.number()\n      .min(0)\n      .max(10)\n      .label(\"Rate\")\n  };\n  // emulate POST request to the server and save the new movie to database\n  workWithData = () => {\n    const { data, genres } = this.state;\n    const { genre, ...movie } = data;\n    movie.genre = genres.filter(g => g._id === genre)[0]; // return first object from array\n    saveMovie(movie);\n  };\n\n  componentDidMount() {\n    this.setState({ genres: getGenres() });\n  }\n\n  render() {\n    const { genres } = this.state;\n    return (\n      <React.Fragment>\n        <BackLink />\n        <div className=\"col-md-6 mx-auto\">\n          <div className=\"card bg-dark text-light border-light\">\n            <h5 className=\"card-header bg-info\">Add Movie</h5>\n            <div className=\"card-body\">\n              <form onSubmit={this.handleSubmitForm} className=\"form\">\n                {this.renderInput(\"title\", \"Title\", true)}\n                {this.renderCustomSelectMenu(\"genre\", genres, \"Genre\")}\n                {this.renderInput(\"stock\", \"Number in stock\", true)}\n                {this.renderInput(\"rate\", \"Rate\", true)}\n                {this.renderSubmit(\"Add\", \"btn-info\")}\n              </form>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AddMovie;\n","import React from \"react\";\nimport {\n  HashRouter as Router, // needed for a Github pages\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport \"./App.css\";\n\n// components\nimport Movies from \"./components/movies/movies\";\nimport Customers from \"./components/layout/pages/customers/customers\";\nimport Rentals from \"./components/layout/pages/rentals/rentals\";\nimport UpdateMovie from \"./components/layout/pages/movie/updateMovie\";\nimport NotFound from \"./components/layout/pages/notFound/notFound\";\nimport NavBar from \"./components/layout/navBar/navBar\";\nimport LoginForm from \"./components/layout/pages/login/loginForm\";\nimport Register from \"./components/layout/pages/register/register\";\nimport AddMovie from \"./components/addMovie/addMovie\";\n\nconst App = () => {\n  return (\n    <Router>\n      <NavBar />\n      <div className=\"container\">\n        <Switch>\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/login\" component={LoginForm} />\n          <Route exact path=\"/movies\" component={Movies} />\n          <Route path=\"/movie/add\" component={AddMovie} />\n          <Route path=\"/customers\" component={Customers} />\n          <Route path=\"/rentals\" component={Rentals} />\n          <Route path=\"/movie/:id\" component={UpdateMovie} />\n          <Redirect exact from=\"/\" to=\"/movies\" />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}